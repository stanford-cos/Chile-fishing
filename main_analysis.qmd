---
title: "Chile VMS Exploritory Analysis"
author: 
  - name: Althea Marks
    orcid: 0000-0002-9370-9128
    email: amarks1@stanford.edu
    affiliations:
      - name: Stanford Center for Ocean Solutions
date: "`r Sys.Date()`"
format: 
  html: 
    number-sections: true
    toc: true
    code-tools: true
    theme: cosmo 
    self-contained: true
    page-layout: full
---

```{r setup, include=FALSE}
# Code chunk setup options
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE)
```

```{r packages-directories}
# libraries
library(readr)
library(bigrquery)

# directories
data_dir <- file.path("./data")
out_dir <- file.path("./output")
scripts_dir <- file.path("./scripts")

# load functions
source(file.path(scripts_dir, "functions.R"))
```

```{r import-gfw-Chile-VMS-data, eval=FALSE}
# Import data from bq_gfw_query.sql
fish_data <- read_csv(file.path(data_dir, "gfw_research_positions_2023_07_03.csv"))
port_coords <- read_csv(file.path(data_dir, "port_coordinates.csv"))
```


# Map Individual Vessels

Date Range: 2023-05-01 to 2023-05-15
```{r make_maps, eval=FALSE}
map_list <- list()

for (i in 1:10){
   a_vessel <- get_one_vessel(fish_data,i)
   map_list[[i]] <- map_one_vessel(a_vessel)
}

```

1) ssvid `r get_one_ssvid(fish_data,1)`
```{r map_1, eval=FALSE}
map_list[[1]]
```
------------------

2) ssvid `r get_one_ssvid(fish_data,2)`
```{r, eval=FALSE}
map_list[[2]]
```
-------------------

3) ssvid `r get_one_ssvid(fish_data,3)`
```{r, eval=FALSE}
map_list[[3]]
```
-------------------

4) ssvid `r get_one_ssvid(fish_data,4)`
```{r, eval=FALSE}
map_list[[4]]
```
-------------------

5) ssvid `r get_one_ssvid(fish_data,5)`
```{r, eval=FALSE}
map_list[[5]]
```
-------------------

6) ssvid `r get_one_ssvid(fish_data,6)`
```{r, eval=FALSE}
map_list[[6]]
```
-------------------

7) ssvid `r get_one_ssvid(fish_data,7)`
```{r, eval=FALSE}
map_list[[7]]
```
-------------------

8) ssvid `r get_one_ssvid(fish_data,8)`
```{r, eval=FALSE}
map_list[[8]]
```
-------------------

9) ssvid `r get_one_ssvid(fish_data,9)`
```{r, eval=FALSE}
map_list[[9]]
```
-------------------

10) ssvid `r get_one_ssvid(fish_data,10)`
```{r, eval=FALSE}
map_list[[10]]
```


# Chile Easter Island AIS Fishing Effort

```{r get_marine_boundaries_easter_island}
source(file.path(scripts_dir, "easter_island_geometry.R"))
```   

```{r analysis_easter_island}
easter_data <- read_csv(file.path(data_dir, "gfw_fish_events_easter_isl_2023-01-01_2023-06-30.csv"))
```

# Fishing Hours Heat Map

Using GFW map is the best option for large amounts of data.

# PSMA Top 10 Pacific Ports

```{r}
read_in_ocean("pacific")
read_in_ocean("south_china_sea")
```

```{r}
# can combine simple features of the same class - 
# would pacific (multipolygon) & south china sea (polygon) work
total_pacific <- st_sfc(pacific, south_china_sea)
```


# Connect to GFW BigQuery

not working yet
```{r connect_BigQuery, eval=FALSE}

library(DBI)
library(bigrquery)

#### Question 
# Do I need a service account to make authentification automatic/stored in local environment? Current code required redirecting to browser to authenticate account.

# Use environmental variable to point to service key for authentication
#api_key <- file.path(Sys.getenv("bg_marks_key"))

#bigrquery::bq_auth()

# establish connection
con <- DBI::dbConnect(
  bigrquery::bigquery(),
  project = "world-fishing-827",
  dataset = "pipe_chile_production_v20211126",
  billing = "ssds-scrt-marks",
  use_legacy_sql = FALSE
)


# list tables - promps browser login window
length(dbListTables(con))

# show how R gets translated into SQL, include in pipe
# dplyr::show_query
```