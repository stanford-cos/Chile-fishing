---
title: "Chile Fishing Effort"
subtitle: "Exploritory Analysis"
author: 
  - name: Althea Marks
    orcid: 0000-0002-9370-9128
    email: amarks1@stanford.edu
    affiliations:
      - name: Stanford Center for Ocean Solutions
date: "`r Sys.Date()`"
format: 
  html: 
    number-sections: true
    toc: true
    code-tools: true
    theme: cosmo 
    self-contained: true
    page-layout: full
title-block-banner: images/image_2.png
title-block-banner-color: white
---

```{r setup, include=FALSE}
# Code chunk setup options
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE)

# libraries
library(readr)
library(tidyverse)
library(renv)
library(knitr)

# directories
data_dir <- file.path("./data")
out_dir <- file.path("./output")
scripts_dir <- file.path("./scripts")

# load functions
source(file.path(scripts_dir, "functions.R"))
```

# Easter Island EEZ AIS Fishing Effort

```{r easter_data_analysis}
# load ata pulled from GFW via scripts/gfw_chl_ais_easter_isl.sql
easter_raw <- read_csv(file.path(data_dir, 
                                  "gfw_fish_ef_easter_isl_vsl_info_2019_01_01_2023_09_12.csv")) 

easter_data <- easter_raw |> 
  mutate(best_vessel_class = replace_na(best_vessel_class, "unknown"),
         best_flag = replace_na(best_flag, "unknown"))
  
# load Country ISO key from https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.csv
country_names <- read_csv(file.path(data_dir, "ISO-3166-Countries.csv"))

# summarize fishing effort by flag and vessel/gear type
easter_summary <- easter_data |> 
  rename("alpha-3" = best_flag) |> 
  left_join(country_names, by = "alpha-3") |> 
  group_by(name, best_vessel_class) |> 
  summarise(total_fishing_hrs = round(sum(fishing_hours),2),
            total_vessel_n = length(unique(ssvid))) |> 
  arrange(desc(total_fishing_hrs))

# summarize fishing effort by vessel/gear type
easter_gear <- easter_summary |> 
  group_by(best_vessel_class) |> 
  summarise(total_fishing_hrs = sum(total_fishing_hrs),
            vessel_n = sum(total_vessel_n))|> 
  arrange(desc(total_fishing_hrs))

# summarize fishing effort by best vessel flag state
easter_flag <- easter_summary |> 
  group_by(name) |> 
  summarise(total_fishing_hrs = sum(total_fishing_hrs),
            vessel_n = sum(total_vessel_n))|> 
  arrange(desc(total_fishing_hrs))

# Fishing Effort over time
# easter_time <- easter_data |> 
#   mutate(date = as.character(date(lubridate::ymd_hms(timestamp)))) |> 
#   group_by(date, best_vessel_class) |> 
#   summarize(total_fishing_hrs = sum(fishing_hours)) |> 
#   expand(date, best_vessel_class, total_fishing_hrs)

easter_time <- easter_data |> 
  mutate(date = date(lubridate::ymd_hms(timestamp))) |>
  group_by(date, best_vessel_class) |>
  summarize(total_fishing_hrs = sum(fishing_hours))

```

## Fishing Effort Map

```{r spatial_data}
# generate easter island eez sf object
source(file.path(scripts_dir, "easter_island_geometry.R"))

# read in MPA shapefile
mpa_sf <- sf::st_read(file.path(data_dir, "MPA_Motu_Motiro_Hiva/WDPA_WDOECM_Sep2023_Public_555543712_shp-polygons.shp"), quiet = T)

# manipulate data for map
easter_vessels <- easter_data |> 
  mutate(timestamp = lubridate::ymd_hms(timestamp),
         best_vessel_class = replace_na(best_vessel_class, "unknown"),
         best_flag = replace_na(best_flag, "unknown"),
         best_vessel_class = as.factor(best_vessel_class))

# make discrete color palette 
pal_circ <- colorFactor(
    palette = viridis(4, direction = -1, option = "D"),
    domain = easter_vessels$best_vessel_class,
    reverse = TRUE)

```

```{r map_easter_island}
# interactive html map
easter_map <- leaflet(easter_vessels) |> 
  addProviderTiles(providers$Esri.WorldPhysical) |> 
    setView(lng =  -107.322582, 
            lat = -26.827692, 
            zoom = 6) |> 
    addPolygons(data = easter_island_eez,
                fillColor = "grey") |> 
    addPolygons(data = mpa_sf,
                fillColor = "violet",
                color = "violet") |> 
    addCircleMarkers(lng = ~lon, 
                     lat = ~lat,
                     color = ~pal_circ(best_vessel_class),
                     radius = 4,
                     label = ~htmlEscape(best_flag)) |> 
    addLegend("bottomright",
              pal = pal_circ,
              values = unique(easter_vessels$best_vessel_class),
            #  values = c(0,1,NA),
              title = "Vessel Class",
              opacity = 1) |>
    addMiniMap(
      tiles = providers$Esri.WorldPhysical,
      position = 'topright',
      width = 100, height = 100,
      toggleDisplay = FALSE)
easter_map
```

2019 January 1st - 2023 September 12th:

-   ``r sum(easter_summary$total_vessel_n)` vessels` fished within EEZ boundary
-   Total of ``r round(sum(easter_summary$total_fishing_hrs), 2)` hours`
-   Effort from ``r nrow(unique(easter_flag[!is.na(easter_flag$name),]))` flag states`
-   Most fishing effort from ``r easter_flag[1,1]``
-   Most fishing effort from ``r easter_gear[1,1]`` gear type

```{r tbl_easter_isalnd_flag}
kable(easter_flag,
      col.names = c("Best Flag", "Total Fishing Hours", "Number of Vessels"),
      caption = "Flag")
```

```{r tbl_easter_island_gear}

kable(easter_gear,
      col.names = c("Vessel Class", "Total Fishing Hours", "Number of Vessels"),
      caption = "Gear")
```

```{r tbl_easter_island_summary}

kable(easter_summary, 
      col.names = c("Best Flag", "Vessel Class", "Total Fishing Hours", 
                                    "Number of Vessels"),
      caption = "Flag & Gear")
```

## Fishing Effort x Time

```{r time_series}
library(viridis)

ggplot(easter_time, aes(date, total_fishing_hrs, color = best_vessel_class)) +
  geom_point() +
  geom_line() +
  theme_bw() +
  labs(x = "Date",
       y = "Total Fishing Hours",
       color = "Vessel Class",
       title = "Fishing Effort Over Time by Vessel Class") +
  scale_color_viridis_d(na.value = "grey50",
                        option = "D", 
                        direction = 1)
```

```{r eval = F}

easter_time_fig <- easter_time |> 
  ggplot(aes(date, total_fishing_hrs, fill = best_vessel_class)) +
  geom_area()

easter_time_fig
```

```{r eval = F}
library(ggridges)

ggplot(easter_time, aes(x = total_fishing_hrs, y = best_vessel_class, fill = best_vessel_class)) +
  geom_density_ridges() +
  theme_ridges() + 
  theme(legend.position = "none")

```

# MPA AIS Fishing Effort

Motu Motiro Hiva MPA

```{r vessels_mpa, results='hide'}
# convert dataframe variables into sf coords
vessel_coords <- st_as_sf(easter_data, coords = c("lon","lat")) 

# check if crs are equal 
st_crs(vessel_coords) == st_crs(mpa_sf)

# crs needs to be the same - take crs from mpa_sf and set to empty dataframe crs
st_crs(vessel_coords) <- st_crs(mpa_sf)$epsg

# filter vessel observations that are within mpa_sf boundary
# produces list output
ptsInt <- st_within(vessel_coords, mpa_sf, sparse = T)

# Convert to numeric (indices of points that are inside or on the boundary of the polygon)
ptsInt_numeric <- lapply(ptsInt, function(x) {
  if(length(x) > 0) 1 else NA }) %>%
  unlist() %>%
  as.numeric()

# Filter original dataframe to only include points that are within or on the boundary of the polygon
mpa_vessels <- easter_data[!is.na(ptsInt_numeric),]



```

```{r map_mpa}
# find center point of polygon
# st_centroid(mpa_sf)

# interactive html map
mpa_map <- leaflet(mpa_vessels) |> 
  addProviderTiles(providers$Esri.WorldPhysical) |> 
    setView(lng = -103.9721,
            lat = -26.89843,
            zoom = 7) |> 
    addPolygons(data = easter_island_eez,
                fillColor = "grey") |> 
    addPolygons(data = mpa_sf,
                fillColor = "violet",
                color = "violet") |> 
    addCircleMarkers(lng = ~lon, 
                     lat = ~lat,
                     color = ~pal_circ(best_vessel_class),
                     radius = 4,
                     label = ~htmlEscape(best_flag)) |> 
    addLegend("bottomright",
              pal = pal_circ,
              values = unique(easter_vessels$best_vessel_class),
            #  values = c(0,1,NA),
              title = "Vessel Class",
              opacity = 1) |>
    addMiniMap(
      tiles = providers$Esri.WorldPhysical,
      position = 'topright',
      width = 100, height = 100,
      toggleDisplay = FALSE)
mpa_map
```

```{r mpa_analysis}
# summarize fishing effort by flag and vessel/gear type
mpa_summary <- mpa_vessels |> 
  rename("alpha-3" = best_flag) |> 
  left_join(country_names, by = "alpha-3") |> 
  group_by(name, best_vessel_class) |> 
  summarise(total_fishing_hrs = round(sum(fishing_hours),2),
            total_vessel_n = length(unique(ssvid))) |> 
  arrange(desc(total_fishing_hrs))

# summarize fishing effort by vessel/gear type
mpa_gear <- mpa_summary |> 
  group_by(best_vessel_class) |> 
  summarise(total_fishing_hrs = sum(total_fishing_hrs),
            vessel_n = sum(total_vessel_n))|> 
  arrange(desc(total_fishing_hrs))

# summarize fishing effort by best vessel flag state
mpa_flag <- mpa_summary |> 
  group_by(name) |> 
  summarise(total_fishing_hrs = sum(total_fishing_hrs),
            vessel_n = sum(total_vessel_n))|> 
  arrange(desc(total_fishing_hrs))

mpa_time <- mpa_vessels |> 
  mutate(date = date(lubridate::ymd_hms(timestamp))) |>
  group_by(date, best_vessel_class) |>
  summarize(total_fishing_hrs = sum(fishing_hours))
```

2019 January 1st - 2023 September 12th:

-   ``r sum(mpa_summary$total_vessel_n)` vessels` fished within MPA boundary
-   Total of ``r round(sum(mpa_summary$total_fishing_hrs), 2)` hours`
-   Effort from ``r nrow(unique(mpa_flag[!is.na(mpa_flag$name),]))` flag states`
-   Most fishing effort from ``r mpa_flag[1,1]``
-   Most fishing effort from ``r mpa_gear[1,1]`` gear type

```{r tbl_mpa_flag}
kable(mpa_flag,
      col.names = c("Best Flag", "Total Fishing Hours", "Number of Vessels"),
      caption = "Flag")
```

```{r tbl_mpa_gear}

kable(mpa_gear,
      col.names = c("Vessel Class", "Total Fishing Hours", "Number of Vessels"),
      caption = "Gear")
```

```{r tbl_mpa_summary}

kable(mpa_summary, 
      col.names = c("Best Flag", "Vessel Class", "Total Fishing Hours", 
                                    "Number of Vessels"),
      caption = "Flag & Gear")
```
